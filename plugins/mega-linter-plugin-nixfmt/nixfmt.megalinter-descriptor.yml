descriptor_id: NIX
descriptor_type: format
descriptor_flavors:
  - all_flavors # Applicable to CI in any language project
file_extensions:
  - ".nix"
linters:
  # NIXFMT
  - linter_name: nixfmt
    linter_repo: https://github.com/serokell/nixfmt
    linter_url: https://nixfmt.serokell.io/
    is_formatter: true
    cli_docker_image: nixos/nix
    cli_help_arg_name: "--help"
    cli_lint_extra_args:
      - "--check"
    cli_lint_fix_arg_name: "--megalinter-fix-flag" # Workaround for Mega-Linter
    cli_lint_fix_remove_args:
      - "--check"
    cli_version_arg_name: "--numeric-version"
    version_extract_regex: "(\\d+(\\.\\d+)+)"
    examples:
      - "`nixfmt < input.nix` – reads Nix code form stdin, formats it, and outputs to stdout"
      - "`nixfmt file.nix` – format the file in place"
      - "`nixfmt file1.nix file2.nix` – format multiple files"
    install:
      dockerfile:
        - |
          RUN nix-channel --add https://nixos.org/channels/nixpkgs-unstable
          RUN nix-channel --update
          RUN nix-env -iA nixpkgs.nixfmt
          RUN nixfmt --version

          # RUN apk add  \
          #   --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/main \
          #   --update --no-cache \
          #   bash \
          #   boost-dev \
          #   curl \
          #   sudo \
          #   tar \
          #   xz
          # RUN apk add  \
          #   --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \
          #   --update --no-cache nix
          # RUN nix-channel --add https://nixos.org/channels/nixpkgs-unstable
          # RUN nix-channel --update
          # RUN rm -rf /nix/var/nix/profiles/default
          # RUN ln -s /nix/var/nix/profiles/per-user/root /nix/var/nix/profiles/default
          # RUN nix-env -iA nixpkgs.nixfmt
          # RUN ln -s /nix/var/nix/profiles/default/bin/nixfmt /usr/bin
          # RUN nixfmt --version
    ide:
      vscode:
        - name: nixfmt
          url: https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode

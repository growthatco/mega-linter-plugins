descriptor_id: NIX
descriptor_type: format
descriptor_flavors:
  - all_flavors # Applicable to CI in any language project
file_extensions:
  - ".nix"
linters:
  - linter_name: nixpkgs-fmt
    linter_repo: https://github.com/serokell/nixpkgs-fmt
    linter_url: https://nixpkgs-fmt.serokell.io/
    is_formatter: true
    cli_docker_image: samcraig/nixpkgs-fmt
    cli_docker_args:
      - "-v"
      - "{{WORKSPACE}}:/tmp/lint:rw"
    cli_executable: nixpkgs-fmt
    cli_help_arg_name: "--help"
    cli_lint_extra_args:
      - "--check"
    cli_lint_fix_arg_name: "--megalinter-fix-flag" # Workaround for Mega-Linter
    cli_lint_fix_remove_args:
      - "--check"
    cli_version_arg_name: "--version"
    version_command_return_code: 1
    version_extract_regex: "(\\d+(\\.\\d+)+)"
    examples:
      - "`docker run -v {{WORKSPACE}}:/tmp/lint:rw samcraig/nixpkgs-fmt:latest nixpkgs-fmt < input.nix` – reads Nix code form stdin, formats it, and outputs to stdout"
      - "`docker run -v {{WORKSPACE}}:/tmp/lint:rw samcraig/nixpkgs-fmt:latest nixpkgs-fmt file.nix` – format the file in place"
      - "`docker run -v {{WORKSPACE}}:/tmp/lint:rw samcraig/nixpkgs-fmt:latest nixpkgs-fmt file1.nix file2.nix` – format multiple files"
    ide:
      vscode:
        - name: nix-ide
          url: https://marketplace.visualstudio.com/items?itemName=jnoortheen.nix-ide

